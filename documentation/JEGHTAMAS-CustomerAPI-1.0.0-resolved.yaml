---
openapi: 3.0.0
info:
  title: Simple Customer API
  description: "Adott egy létező ügyfél adatbázis, amely a cég ügyfél adatait tárolja. Ezek: név, cím, ügyfél kód (lehet üres), szerződés dátuma. Készíteni kell egy PHP API-t, ami egy nagyobb rendszer komponense lesz, melyen keresztül ki lehet listázni az adatokat, új ügyfelet lehet menteni, és meglévőket módosítani. Legyen lehetőség arra, hogy az adatokat tömbösítve mentsük. Ezeket a műveleteket a lehető legkevesebb végponttal kell kiszolgálni."
  contact:
    email: jeghtamas@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/JEGHTAMAS/CustomerAPI/1.0.0
  description: CustomerAPI
tags:
- name: customers
  description: Operations to maintain customers
paths:
  /customers:
    get:
      tags:
      - customers
      summary: List all customers
      description: |
        You can list all of the registered customers in the system.
      operationId: list
      parameters:
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "400":
          description: bad input parameter
        "408":
          description: Request can not be proceed due to resource limitations
        "5XX":
          description: Unexpected error.
    post:
      tags:
      - customers
      summary: Add customers
      description: Adds a customers to the system
      operationId: add
      requestBody:
        description: List of customers to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreationalRequest'
      responses:
        "201":
          description: Item(s) are created
        "400":
          description: "Invalid input, object invalid"
        "408":
          description: Request can not be proceed due to resource limitations
        "409":
          description: An existing item already exists (customerCode))
        "5XX":
          description: Unexpected error.
  /customers/{customerId}:
    get:
      tags:
      - customers
      summary: Retrieve a customer
      description: |
        You can get one  of the registered customers in the system.
      operationId: getById
      parameters:
      - name: customerId
        in: path
        description: ID of the customer to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      responses:
        "200":
          description: specified customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "404":
          description: A customer with the specified ID was not found.
        "408":
          description: Request can not be proceed due to resource limitations
        "5XX":
          description: Unexpected error.
    delete:
      tags:
      - customers
      summary: Delete a customer
      description: |
        You can get one  of the registered customers in the system.
      operationId: deleteById
      parameters:
      - name: customerId
        in: path
        description: ID of the customer to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      responses:
        "204":
          description: User is not existing anymore
        "404":
          description: A customer with the specified ID was not found.
        "408":
          description: Request can not be proceed due to resource limitations
        "5XX":
          description: Unexpected error.
    patch:
      tags:
      - customers
      summary: Update a customer
      description: |
        You can get one  of the registered customers in the system.
      operationId: updateById
      parameters:
      - name: customerId
        in: path
        description: ID of the customer to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
      requestBody:
        description: Attributes to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPatchRequest'
      responses:
        "200":
          description: specified customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "404":
          description: A customer with the specified ID was not found.
        "408":
          description: Request can not be proceed due to resource limitations
        "5XX":
          description: Unexpected error.
components:
  schemas:
    Customer:
      required:
      - address
      - contractDate
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Sample Customer
        contractDate:
          type: string
          format: date-time
          example: 2023-08-31T14:12:33.001Z
        address:
          type: string
          example: "Hungary, 2030 City, street 12/B"
        customerCode:
          type: string
          nullable: true
          example: CustomerCode-1
    CustomerCreationalRequest:
      type: array
      example:
      - name: Sample Customer
        contractDate: 2023-08-31T14:12:33.001Z
        address: "Hungary, 2030 City, street 12/B"
        customerCode: CustomerCode-1
      - name: Sample Customer2
        contractDate: 2020-08-31T14:12:33.001Z
        address: "Hungary, 1091 City, street 12/B"
        customerCode: CustomerCode-2
      items:
        $ref: '#/components/schemas/CustomerCreationalRequest_inner'
    CustomerPatchRequest:
      type: object
      properties:
        name:
          type: string
          example: Sample Customer
        contractDate:
          type: string
          format: date-time
          example: 2023-08-31T14:12:33.001Z
        address:
          type: string
          example: "Hungary, 2030 City, street 12/B"
        customerCode:
          type: string
          nullable: true
          example: CustomerCode-1
    CustomerCreationalRequest_inner:
      required:
      - address
      - contractDate
      - name
      type: object
      properties:
        name:
          type: string
          example: Sample Customer
        contractDate:
          type: string
          format: date-time
          example: 2023-08-31T14:12:33.001Z
        address:
          type: string
          example: "Hungary, 2030 City, street 12/B"
        customerCode:
          type: string
          nullable: true
          example: CustomerCode-1
